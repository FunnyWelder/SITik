security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        jwt:
            lexik_jwt: ~
    firewalls:
        login:
            provider: app_user_provider
            pattern: ^/token/check
            stateless: true
            json_login:
                check_path: /token/check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            provider: app_user_provider
            pattern: ^/token/refresh
            stateless: true
            refresh_jwt: ~
        dev:
            provider: app_user_provider
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: jwt
            pattern:   ^/
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/token, roles: PUBLIC_ACCESS }
        - { path: ^/user, roles: PUBLIC_ACCESS, methods: [POST] }
        - { path: ^/todo/self, roles: ROLE_USER }
        - { path: ^/files, roles: ROLE_USER }
        - { path: ^/, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER, ROLE_ALLOWED_TO_SWITCH ]
